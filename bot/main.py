import asyncio
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties

from config.config import BOT_TOKEN, ADMIN_ID
from db.database import Base
from db.engine import async_engine
from scheduler.combined_scheduler import main_loop  # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤–Ω—É—Ç—Ä–∏

# –ò–º–ø–æ—Ä—Ç Telegram-—Ä–æ—É—Ç–µ—Ä–æ–≤
from bot.handlers import (
    reels_submission,
    admin_accounts,
    view_start,
    logs_admin,
    logs_export,
    report_user,
    view_status,
    my_report,
    report,
)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher(storage=MemoryStorage())


async def init_db():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)."""
    async with async_engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)
    print("üì¶ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")


async def init_bot() -> Bot:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–æ–≤."""
    bot = Bot(
        token=BOT_TOKEN,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )

    routers = [
        reels_submission.router,
        admin_accounts.router,
        view_start.router,
        logs_admin.router,
        logs_export.router,
        report_user.router,
        view_status.router,
        my_report.router,
        report.router,
    ]
    for r in routers:
        dp.include_router(r)

    print("ü§ñ –†–æ—É—Ç–µ—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    return bot


async def main():
    await init_db()
    bot = await init_bot()

    # –ü—Ä–æ–≤–µ—Ä–∏–º ID –∞–¥–º–∏–Ω–∞
    me = await bot.get_me()
    print(f"üöÄ –ë–æ—Ç {me.username} –∑–∞–ø—É—â–µ–Ω | ID: {me.id}")
    print(f"üîê –ê–¥–º–∏–Ω ID(—ã): {ADMIN_ID}")

    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ ‚Äî –∫–∞–∫ —Ñ–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞
    asyncio.create_task(main_loop())

    try:
        await dp.start_polling(bot)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è polling: {e}")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    except Exception as e:
        print(f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
