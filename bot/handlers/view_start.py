from aiogram import Router, types
from instagram.automation.story_viewer import create_viewer_driver, view_stories
from db.database import async_session
from db.models import StoryViewLog
from datetime import datetime

router = Router()
ADMIN_ID = 123456789  # ‚Üê –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π Telegram ID

@router.message(types.F.text.lower() == "–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä")
async def start_view(msg: types.Message):
    await msg.answer("‚è≥ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–æ—Ä–∏—Å...")

    usernames = [
        "account_1", "account_2", "account_3"  # ‚Üê –ø–æ–∑–∂–µ –º–æ–∂–Ω–æ –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –∏–∑ –±–∞–∑—ã
    ]

    driver = create_viewer_driver()
    report = view_stories(driver, usernames)
    driver.quit()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    async with async_session() as session:
        for username, status_text in report:
            status = "viewed" if "‚úÖ" in status_text else "failed"
            log = StoryViewLog(
                viewer_telegram_id=msg.from_user.id,
                target_username=username,
                status=status,
                timestamp=datetime.utcnow()
            )
            session.add(log)
        await session.commit()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_report = "\n".join([f"@{u}: {s}" for u, s in report])
    await msg.answer(f"üìä –í–∞—à –æ—Ç—á—ë—Ç:\n{user_report}")

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    admin_text = (
        f"üë§ <b>@{msg.from_user.username or '–ë–µ–∑ username'}</b> "
        f"(<code>{msg.from_user.id}</code>) –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª —Å—Ç–æ—Ä–∏—Å:\n{user_report}"
    )
    await msg.bot.send_message(chat_id=ADMIN_ID, text=admin_text, parse_mode="HTML")
