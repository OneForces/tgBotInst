from db.models import ReelsTask
from db.database import async_session
from sqlalchemy import update

from appium import webdriver
from appium.webdriver.common.appiumby import AppiumBy
from time import sleep

INSTAGRAM_PACKAGE = "com.instagram.android"
INSTAGRAM_ACTIVITY = ".activity.MainTabActivity"
CHROME_PACKAGE = "com.android.chrome"
CHROME_ACTIVITY = "com.google.android.apps.chrome.Main"
APPIUM_SERVER_URL = "http://127.0.0.1:4723/wd/hub"

def get_driver():
    caps = {
        "platformName": "Android",
        "deviceName": "emulator-5554",
        "appPackage": INSTAGRAM_PACKAGE,
        "appActivity": INSTAGRAM_ACTIVITY,
        "noReset": False,
        "automationName": "UiAutomator2"
    }
    return webdriver.Remote(APPIUM_SERVER_URL, caps)

def login_to_instagram(driver, username, password):
    try:
        print(f"[üîê] –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ {username}")
        sleep(5)
        driver.find_element(AppiumBy.XPATH, "//android.widget.EditText[1]").send_keys(username)
        driver.find_element(AppiumBy.XPATH, "//android.widget.EditText[2]").send_keys(password)
        driver.find_element(AppiumBy.XPATH, "//android.widget.Button").click()
        sleep(6)
        print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥")
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {e}")

def logout_from_instagram(driver):
    try:
        print("üö™ –í—ã—Ö–æ–¥–∏–º –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞")
        driver.find_element(AppiumBy.ACCESSIBILITY_ID, "–ü—Ä–æ—Ñ–∏–ª—å").click()
        sleep(2)
        driver.find_element(AppiumBy.ACCESSIBILITY_ID, "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã").click()
        sleep(2)
        driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().textContains("–í—ã–π—Ç–∏")').click()
        sleep(1)
        driver.find_element(AppiumBy.ID, "android:id/button1").click()
        sleep(2)
        print("‚úÖ –í—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞")
    except Exception as e:
        print(f"‚ö† –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞: {e}")

async def post_reels_to_stories(task: ReelsTask):
    print(f"[üì≤] –ü—É–±–ª–∏–∫—É–µ–º Reels: {task.reels_url}")
    driver = webdriver.Remote(account.appium_url + "/wd/hub", caps)

    try:
        # üîê –õ–æ–≥–∏–Ω–∏–º—Å—è –ø–æ–¥ –Ω—É–∂–Ω—ã–º –∞–∫–∫–∞—É–Ω—Ç–æ–º
        login_to_instagram(driver, task.instagram_login, task.instagram_password)

        # üîó –û—Ç–∫—Ä—ã—Ç–∏–µ Reels –≤ Chrome
        driver.start_activity(CHROME_PACKAGE, CHROME_ACTIVITY)
        sleep(4)
        driver.get(task.reels_url)
        sleep(6)

        # üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ —Å—Ç–æ—Ä–∏—Å
        try:
            driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().descriptionContains("–ï—â–µ")').click()
            sleep(2)
            driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().textContains("–≤ —Å—Ç–æ—Ä–∏—Å")').click()
            sleep(2)
            driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().textContains("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è")').click()
            sleep(3)
            print("‚úÖ Reels —Ä–∞–∑–º–µ—â—ë–Ω")
        except Exception as e:
            print(f"‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å: {e}")

        # üö™ –õ–æ–≥–∞—É—Ç
        logout_from_instagram(driver)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
    finally:
        driver.quit()

    # ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ
    async with async_session() as session:
        await session.execute(
            update(ReelsTask)
            .where(ReelsTask.id == task.id)
            .values(status="posted")
        )
        await session.commit()
